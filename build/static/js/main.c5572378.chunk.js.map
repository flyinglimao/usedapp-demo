{"version":3,"sources":["Balance.tsx","Connect.tsx","Contract.tsx","Transaction.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Balance","account","useEthers","ethBalance","useEtherBalance","usdcBalance","useTokenBalance","formatEther","formatUnits","ConnectButton","styled","button","Connect","activateBrowserWallet","error","console","log","useEffect","alert","onClick","abi","Interface","Input","input","Contract","useState","address","setAddress","tokenName","useContractCall","method","args","tokenDecimals","tokenBalance","type","onChange","event","currentTarget","value","usdcContract","A","a","BurnButton","Transaction","useContractFunction","send","state","shortenTransactionHash","hash","substr","status","href","getExplorerTransactionLink","transaction","ChainId","Kovan","receipt","blockNumber","PageWrapper","div","config","readOnlyChainId","readOnlyUrls","activeClassName","Nav","StyledNavLink","NavLink","attrs","App","DAppProvider","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5572378.chunk.js","sourcesContent":["import { useEtherBalance, useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatEther, formatUnits } from '@ethersproject/units';\n\nexport default function Balance() {\n    const { account } = useEthers();\n    const ethBalance = useEtherBalance(account);\n    const usdcBalance = useTokenBalance('0xe22da380ee6b445bb8273c81944adeb6e8450422', account);\n\n    return (\n        account ?\n            <div>\n                <h1>Ethers: { ethBalance ? formatEther(ethBalance) : 0 }</h1>\n                <h1>USDC: { usdcBalance ? formatUnits(usdcBalance, 6) : 0 }</h1>\n            </div>:\n            <h1>Not Connect Yet</h1>\n    );\n}","import { useEthers } from '@usedapp/core';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst ConnectButton = styled.button`\n    border: none;\n    background-color: hsl(323, 95%, 80%);\n    border-radius: 12px;\n    font-size: 1.2rem;\n    padding: .5rem 1rem;\n    color: white;\n    font-weight: 500;\n    :hover,\n    :focus {\n        outline: 1px solid hsl(323, 95%, 40%);\n    }\n`;\n\nexport default function Connect() {\n    const { activateBrowserWallet, account, error } = useEthers();\n    console.log(error)\n    useEffect(() => {\n        error && alert(error);\n    }, [error]);\n    return account ?\n        <h1>{ account }</h1> :\n        <ConnectButton onClick={() => activateBrowserWallet()}>Connect To Wallet</ConnectButton>;\n}","import { Interface } from '@ethersproject/abi';\nimport { formatUnits } from '@ethersproject/units';\nimport { useContractCall, useEthers } from '@usedapp/core';\nimport { ChangeEvent, useState } from 'react';\nimport styled from 'styled-components';\n\nconst abiJSON = [\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"_owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"balanceOf\",\n        \"outputs\": [\n            {\n                \"name\": \"balance\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [],\n        \"name\": \"decimals\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint8\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n];\nconst abi: Interface = new Interface(abiJSON);\n\nconst Input = styled.input`\n    border: none;\n    font-size: inherit;\n`;\n\nexport default function Contract() {\n    const { account } = useEthers();\n    const [ address, setAddress ] = useState('0xe22da380ee6b445bb8273c81944adeb6e8450422');\n    const tokenName = useContractCall({\n        abi,\n        address,\n        method: 'name',\n        args: [],\n    });\n    const tokenDecimals = useContractCall({\n        abi,\n        address,\n        method: 'decimals',\n        args: [],\n    });\n    const tokenBalance = useContractCall({\n        abi,\n        address,\n        method: 'balanceOf',\n        args: [account],\n    });\n    return (\n        <div>\n            <h1>\n                代幣地址：\n                <Input\n                    type=\"text\"\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setAddress(event.currentTarget.value)}\n                    value={address}\n                />\n            </h1>\n            <h1>代幣名稱：{ tokenName }</h1>\n            { tokenBalance && <h1>代幣餘額：{ formatUnits(tokenBalance[0], tokenDecimals) }</h1> }\n        </div>\n    );\n}","import { Contract } from '@ethersproject/contracts';\nimport { ChainId, getExplorerTransactionLink, useContractFunction } from '@usedapp/core';\nimport styled from 'styled-components';\n\nconst abiJSON = [\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"_to\",\n                \"type\": \"address\"\n            },\n            {\n                \"name\": \"_value\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"transfer\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n];\nconst usdcContract = new Contract('0xe22da380ee6b445bb8273c81944adeb6e8450422', abiJSON);\n\nconst A = styled.a`\n    text-decoration: none;\n    color: hsl(323, 65%, 50%);\n    ::after {\n        content: ' ';\n    }\n`;\nconst BurnButton = styled.button`\n    display: block;\n    margin: 0 auto;\n    border: none;\n    background-color: hsl(323, 95%, 80%);\n    border-radius: 12px;\n    font-size: 1.2rem;\n    padding: .5rem 1rem;\n    color: white;\n    font-weight: 500;\n    :hover,\n    :focus {\n        outline: 1px solid hsl(323, 95%, 40%);\n    }\n`;\n\nexport default function Transaction() {\n    const { send, state } = useContractFunction(usdcContract, 'transfer');\n    function shortenTransactionHash(hash: string) {\n        return hash.substr(0, 6) + '...' + hash.substr(-4)\n    }\n    return (\n        <div>\n            { state.status === 'None' && <></> }\n            { state.status === 'Exception' && <h1>交易失敗，參數不正確或取消交易</h1> }\n            { state.status === 'Mining' && \n                <>\n                    <h1>交易進行中<br />\n                        <A href={getExplorerTransactionLink(state.transaction.hash, ChainId.Kovan)}>\n                            { shortenTransactionHash(state.transaction.hash) }\n                        </A>\n                    </h1>\n                </>\n            }\n            { state.status === 'Success' &&\n                <>\n                    <h1>交易成功<br />\n                        <A href={getExplorerTransactionLink(state.transaction.hash, ChainId.Kovan)}>\n                            { shortenTransactionHash(state.transaction.hash) }\n                        </A>\n                        位於 { state.receipt.blockNumber }\n                    </h1>\n                </>\n            }\n            { state.status === 'Fail' &&\n                <>\n                    <h1>交易失敗<br />\n                        <A href={getExplorerTransactionLink(state.transaction.hash, ChainId.Kovan)}>\n                            { shortenTransactionHash(state.transaction.hash) } \n                        </A>\n                        位於 { state.receipt.blockNumber }\n                    </h1>\n                </>\n            }\n            <BurnButton onClick={() => send('0x000000000000000000000000000000000000dead', '1000000')}>燒毀 1 USDC</BurnButton>\n        </div>\n    );\n}","import { ChainId, Config, DAppProvider } from '@usedapp/core';\nimport React from 'react';\nimport { Switch, Route, HashRouter, Redirect, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Balance from './Balance';\nimport Connect from './Connect';\nimport Contract from './Contract';\nimport Transaction from './Transaction';\n\nconst PageWrapper = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  place-items: center;\n`;\n\nconst config: Config = {\n  readOnlyChainId: ChainId.Kovan,\n  readOnlyUrls: {\n    [ChainId.Kovan]: 'https://kovan.infura.io/v3/1b4fd85ec53748feae973ece5bc436bd',\n  },\n}\n\nconst activeClassName = 'ACTIVE';\nconst Nav = styled.div`\n  position: fixed;\n  top: 2rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: hsl(323, 65%, 90%);\n  display: flex;\n  padding: .3rem .3rem;\n  border-radius: 12px;\n`;\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })<{ isActive?: boolean }>`\n  font-size: 1.2rem;\n  font-weight: 500;\n  text-decoration: none;\n  color: black;\n  padding: .3rem .6rem;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    background-color: hsl(323, 95%, 80%);\n    color: white;\n  }\n`;\n\nfunction App() {\n  return (\n    <DAppProvider config={config}>\n      <HashRouter>\n        <Nav>\n          <StyledNavLink to=\"/connect\">連接</StyledNavLink>\n          <StyledNavLink to=\"/balance\">餘額</StyledNavLink>\n          <StyledNavLink to=\"/contract\">合約</StyledNavLink>\n          <StyledNavLink to=\"/transaction\">交易</StyledNavLink>\n        </Nav>\n        <Switch>\n          <PageWrapper>\n            <Route exact path=\"/connect\" component={Connect} />\n            <Route exact path=\"/balance\" component={Balance} />\n            <Route exact path=\"/contract\" component={Contract} />\n            <Route exact path=\"/transaction\" component={Transaction} />\n            <Redirect to=\"/connect\" />\n          </PageWrapper>\n        </Switch>\n      </HashRouter>\n    </DAppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}